The ``100-matrix_divided`` module
======================

Using ``matrix_mul``
-------------------

First import ``matrix_mul`` from the ``100-matrix_mul`` module:

    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

Now use it:

    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]

    >>> matrix_mul([[1, 2], [3, 4]], [[1], [3]])
    [[7], [15]]


    >>> matrix_mul([[1, 2], [3, 4]], [["yo"], [3]])
    Traceback (most recent call last):
    ...
    TypeError: m_b should contain only integers or floats


    >>> matrix_mul([[1, 2], [3, 4]], [[None], [3]])
    Traceback (most recent call last):
    ...
    TypeError: m_b should contain only integers or floats


    >>> matrix_mul([[1, 2], [3, 4]], [[True], [3]])
    Traceback (most recent call last):
    ...
    TypeError: m_b should contain only integers or floats

    >>> matrix_mul([[1, 2], [3, 4]], [[[1, 3]], [3]])
    Traceback (most recent call last):
    ...
    TypeError: m_b should contain only integers or floats


    >>> matrix_mul([[1, 2], ["yo", 4]], [[1], [3]])
    Traceback (most recent call last):
    ...
    TypeError: m_a should contain only integers or floats


    >>> matrix_mul([[1, 2], [None, 4]], [[1], [3]])
    Traceback (most recent call last):
    ...
    TypeError: m_a should contain only integers or floats


    >>> matrix_mul([[1, 2], [True, 4]], [[1], [3]])
    Traceback (most recent call last):
    ...
    TypeError: m_a should contain only integers or floats


    >>> matrix_mul([[1, 2], [[1, 3], 4]], [[1], [3]])
    Traceback (most recent call last):
    ...
    TypeError: m_a should contain only integers or floats


    >>> matrix_mul([], [[1], [3]])
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty


    >>> matrix_mul([[1, 2], [3, 4]], [])
    Traceback (most recent call last):
    ...
    ValueError: m_b can't be empty


    >>> matrix_mul([[]], [[1], [3]])
    Traceback (most recent call last):
    ...
    ValueError: m_a can't be empty


    >>> matrix_mul([[1, 2], [3, 4]], [[]])
    Traceback (most recent call last):
    ...
    ValueError: m_b can't be empty


    >>> matrix_mul((1, 3), [[1], [3]])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list


    >>> matrix_mul([[1, 2], [3, 4]], (1, 3))
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list


    >>> matrix_mul([(1, 3)], [[1], [3]])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list of lists


    >>> matrix_mul([[1, 2], [3, 4]], [(1, 3)])
    Traceback (most recent call last):
    ...
    TypeError: m_b must be a list of lists


    >>> matrix_mul([[1, 2],[3, 4, 5]], [[1], [3]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_a must be of the same size


    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3]])
    Traceback (most recent call last):
    ...
    TypeError: each row of m_b must be of the same size

    >>> matrix_mul([[1, 2], [3, 4]], [[1], [2], [3]])
    Traceback (most recent call last):
    ...
    ValueError: m_a and m_b can't be multiplied
