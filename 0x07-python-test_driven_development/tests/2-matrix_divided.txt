The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

First import ``matrix_divided`` from the ``2-matrix_divided`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

    >>> matrix = [[1 , 2], [3, 4]]
    >>> matrix_divided(matrix, 1)
    [[1.0, 2.0], [3.0, 4.0]]

    >>> matrix = [[1 , 2], [3, 4]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

    >>> matrix = [[1 , 2], [3, 4]]
    >>> matrix_divided(matrix, "yo")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

    >>> matrix = [[1 , "yo"], [3, 4]]
    >>> matrix_divided(matrix, 1)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats


    >>> matrix = [[1], [3, 4]]
    >>> matrix_divided(matrix, 1)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix = [[1 , 2], [3, 4]]
    >>> matrix_divided(matrix, float("inf"))
    [[0.0, 0.0], [0.0, 0.0]]

    >>> matrix = [[1 , 2], [3, 4]]
    >>> matrix_divided(matrix, float("nan"))
    [[nan, nan], [nan, nan]]

    >>> matrix = [[float("inf")]]
    >>> matrix_divided(matrix, 1000000)
    [[inf]]

    >>> matrix = [[float("inf")]]
    >>> matrix_divided(matrix, float("inf"))
    [[nan]]

    >>> matrix = [[1 , [1, 2]], [3, 4]]
    >>> matrix_divided(matrix, 1)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [[1.5 , 2.5], [3.5, 4.5]]
    >>> matrix_divided(matrix, 0.5)
    [[3.0, 5.0], [7.0, 9.0]]
